

# Set the directory we want to store zinit and plugins, download if not available 
# and then source it
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

# Add in Powerlevel10k
zinit ice depth=1; 

# Add in zsh plugins
# zinit light romkatv/powerlevel10k
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab

zinit snippet OMZP::command-not-found
zinit snippet OMZP::docker
zinit snippet OMZP::docker-compose
zinit snippet OMZP::sudo


zinit ice as"command" from"gh-r" \
          atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
          atpull"%atclone" src"init.zsh"
zinit light starship/starship

# Load completions
autoload -Uz compinit && compinit
autoload -Uz promptinit && promptinit
zinit cdreplay -q # recomended by doc, allows to reaplay cached cd's

# Home, End and Delete keys
bindkey  "^[[H"   beginning-of-line
bindkey  "^[[F"   end-of-line
bindkey  "^[[3~"  delete-char

# Completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}' # ignore case
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}" # add colors
zstyle ':completion:*' menu no # disable default zsh menu, allows fzf menu
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'

# Allow for option stacking in docker based commands
zstyle ':completion:*:*:docker:*:*' option-stacking yes
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes

# Keybindings
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward

# Ctrl-Space to accept
bindkey '^ ' autosuggest-accept

# fzf init (compatible across versions)
if command -v fzf >/dev/null 2>&1; then
  if fzf --help 2>&1 | grep -q -- '--zsh'; then
    eval "$(fzf --zsh)"
  else
    # legacy fallback
    for f in /usr/share/fzf/shell/{completion,key-bindings}.zsh \
             /usr/share/doc/fzf/examples/{completion,key-bindings}.zsh; do
      [ -f "$f" ] && source "$f"
    done
  fi
fi

# Export editors
export EDITOR="nvim"
export visual="nvim"
export MANPAGER="nvim -c 'Man!'"

export PATH="$HOME/.local/bin:$PATH"

## Shell integrations
# Lazy load completions for better startup performance
lazy_load_completion() {
    local cmd="$1"
    local init_cmd="$2"
    
    if command -v "$cmd" >/dev/null 2>&1; then
        eval "$cmd() {
            unfunction $cmd 2>/dev/null || true
            eval \"$init_cmd\"
            $cmd \"\$@\"
        }"
    fi
}

# Always load these immediately (needed for keybindings/core functionality)
eval "$(starship init zsh)"
command -v direnv >/dev/null && eval "$(direnv hook zsh)"
command -v fzf >/dev/null && eval "$(fzf --zsh)"

# Special case for zoxide since it replaces cd
if command -v zoxide >/dev/null; then
    eval "$(zoxide init zsh)"
fi

# Lazy load heavy completions
lazy_load_completion uv 'eval "$(uv generate-shell-completion zsh)"'
lazy_load_completion uvx 'eval "$(uvx --generate-shell-completion zsh)"'

# Load my custom stuff
export MYZSH=$HOME/dotfiles/zsh/
source $MYZSH/config.zsh
source $MYZSH/aliases.zsh
source $MYZSH/scripts.zsh # Sources everything in the zsh_scripts folder

# opencode
export PATH=/home/luism/.opencode/bin:$PATH

